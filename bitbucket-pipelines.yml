image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          # Dependencies
          - apt update
          - apt -y install wget lsb-release gnupg
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
          - wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
          - apt-get update
          - apt -y install cmake build-essential curl git mercurial g++-8 libtinyxml-dev libxml2-utils ruby-dev python-psutil cppcheck
          - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8
          - gcc -v
          - g++ -v
          - gcov -v
          # lcov
          - git clone https://github.com/linux-test-project/lcov.git -b v1.14
          - cd lcov
          - make install
          - cd ..
          # Static checking before building - fail fast
          - sh tools/code_check.sh
          # Dependency: Ignition packages
          - apt-get -y install
            libignition-cmake2-dev libignition-tools-dev libignition-math6-dev
          # SDFormat
          - mkdir build
          - cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make -j4
          - export CTEST_OUTPUT_ON_FAILURE=1
          - make test
          - make coverage
          # Use a special version of codecov for handling gcc8 output.
          - bash <(curl -s https://raw.githubusercontent.com/codecov/codecov-bash/4678d212cce2078bbaaf5027af0c0dafaad6a095/codecov) -X gcovout -X gcov
          - make install
          # Examples
          - cd ..
          - cd examples
          - mkdir build
          - cd build
          - cmake ..
          - make -j4
          - ./simple ../simple.sdf
